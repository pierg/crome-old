<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>


const int       N = 2;  

typedef int[0,N-1] id_t;                 
urgent chan            active[N];
urgent chan     go[N], stop[N], transit[N][N], done[N][N];


int state_controller[N];
const int MAX_NUM_STATES = 10;


broadcast chan context_switch;

bool context_switchable = true;
const int MIN_CTX_TIME = 3;</declaration>
	<template>
		<name>Context</name>
		<parameter>const id_t id</parameter>
		<declaration>clock z;

bool activated = false;</declaration>
		<location id="id0" x="-289" y="-51">
			<name x="-357" y="-85">Inactive</name>
		</location>
		<location id="id1" x="-110" y="-136">
			<name x="-118" y="-178">Fire</name>
			<committed/>
		</location>
		<location id="id2" x="76" y="-51">
			<name x="51" y="-93">Active</name>
			<label kind="invariant" x="17" y="-34">z &lt;= MIN_CTX_TIME</label>
		</location>
		<location id="id3" x="76" y="76">
			<name x="51" y="93">Active_2</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id3"/>
			<target ref="id0"/>
			<label kind="synchronisation" x="-187" y="59">context_switch?</label>
			<nail x="-289" y="76"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="229" y="-17">z &gt;= MIN_CTX_TIME</label>
			<label kind="assignment" x="229" y="8">context_switchable = true</label>
			<nail x="221" y="-51"/>
			<nail x="221" y="76"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id2"/>
			<label kind="synchronisation" x="-25" y="-153">active[id]!</label>
			<label kind="assignment" x="-25" y="-136">context_switchable = false,
z=0</label>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-314" y="-170">context_switchable == true</label>
			<label kind="synchronisation" x="-314" y="-195">context_switch!</label>
		</transition>
	</template>
	<template>
		<name>T_controller</name>
		<parameter>const id_t id_1, const id_t id_2</parameter>
		<declaration>clock t;



void deactivate()
{

}</declaration>
		<location id="id4" x="-119" y="-59">
			<name x="-129" y="-93">Idle</name>
		</location>
		<location id="id5" x="119" y="-59">
			<name x="85" y="-102">Active</name>
			<label kind="invariant" x="93" y="-42">t &lt;= 3</label>
		</location>
		<init ref="id4"/>
		<transition>
			<source ref="id5"/>
			<target ref="id4"/>
			<label kind="synchronisation" x="-51" y="17">done[id_1][id_2]!</label>
			<label kind="assignment" x="-17" y="34">t=0</label>
			<nail x="0" y="8"/>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id5"/>
			<label kind="synchronisation" x="-59" y="-161">transit[id_1][id_2]?</label>
			<label kind="assignment" x="-25" y="-136">t=0</label>
			<nail x="0" y="-119"/>
		</transition>
	</template>
	<template>
		<name x="5" y="5">S_controller</name>
		<parameter>const id_t id</parameter>
		<declaration>clock c;

int rollback_function(int state_id)
{
    
    int ret = state_id;

    if ((state_id % 2) != 0)
    {
        ret = state_id - 1;
    }

    return ret;

}


void resume_state()
{

    state_controller[id] = rollback_function(state_controller[id]);

}



void update_state()
{

    state_controller[id] = (state_controller[id] + 1) % MAX_NUM_STATES;


}</declaration>
		<location id="id6" x="-119" y="-59">
			<name x="-129" y="-93">Idle</name>
		</location>
		<location id="id7" x="119" y="-59">
			<name x="109" y="-93">Active</name>
			<label kind="invariant" x="109" y="-42">c &lt; 2</label>
		</location>
		<init ref="id6"/>
		<transition>
			<source ref="id7"/>
			<target ref="id7"/>
			<label kind="assignment" x="221" y="-59">update_state(),
c = 0</label>
			<nail x="212" y="-102"/>
			<nail x="212" y="-8"/>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id6"/>
			<label kind="synchronisation" x="-25" y="17">stop[id]?</label>
			<nail x="0" y="8"/>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id7"/>
			<label kind="synchronisation" x="-25" y="-161">go[id]?</label>
			<label kind="assignment" x="-51" y="-144">resume_state(),
c=0</label>
			<nail x="0" y="-119"/>
		</transition>
	</template>
	<template>
		<name>Orchestrator</name>
		<declaration>

id_t current;
id_t previous;
id_t next;</declaration>
		<location id="id8" x="-195" y="-306">
			<name x="-212" y="-349">Start</name>
		</location>
		<location id="id9" x="-195" y="-187">
			<committed/>
		</location>
		<location id="id10" x="-195" y="-59">
		</location>
		<location id="id11" x="17" y="-59">
			<committed/>
		</location>
		<location id="id12" x="17" y="119">
		</location>
		<location id="id13" x="-195" y="119">
			<committed/>
		</location>
		<location id="id14" x="119" y="25">
			<committed/>
		</location>
		<init ref="id8"/>
		<transition>
			<source ref="id10"/>
			<target ref="id10"/>
			<label kind="select" x="-323" y="-127">e: id_t</label>
			<label kind="guard" x="-357" y="-110">e == current</label>
			<label kind="synchronisation" x="-340" y="-93">active[e]?</label>
			<nail x="-246" y="-119"/>
			<nail x="-246" y="-8"/>
		</transition>
		<transition>
			<source ref="id14"/>
			<target ref="id12"/>
			<label kind="synchronisation" x="76" y="68">transit[current][next]!</label>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id14"/>
			<label kind="synchronisation" x="68" y="-42">stop[current]!</label>
		</transition>
		<transition>
			<source ref="id13"/>
			<target ref="id10"/>
			<label kind="synchronisation" x="-263" y="8">go[next]!</label>
			<label kind="assignment" x="-297" y="34">current=next</label>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id13"/>
			<label kind="synchronisation" x="-161" y="127">done[current][next]?</label>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id11"/>
			<label kind="select" x="-178" y="-119">e: id_t</label>
			<label kind="guard" x="-161" y="-42">e != current</label>
			<label kind="synchronisation" x="-161" y="-25">active[e]?</label>
			<label kind="assignment" x="-161" y="-8">previous = current,
next = e</label>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id10"/>
			<label kind="synchronisation" x="-178" y="-136">go[current]!</label>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id9"/>
			<label kind="select" x="-187" y="-272">e: id_t</label>
			<label kind="synchronisation" x="-187" y="-255">active[e]?</label>
			<label kind="assignment" x="-187" y="-238">current=e</label>
		</transition>
	</template>
	<system>system Context, S_controller, T_controller, Orchestrator;</system>
	<queries>
		<query>
			<formula>A[] forall (i : id_t) forall (j : id_t) forall (l : id_t) forall (m : id_t) T_controller(i,l).Active &amp;&amp; T_controller(j,m).Active imply (i == j &amp; l == m)</formula>
			<comment>There is never more than one transition-controller active</comment>
		</query>
		<query>
			<formula>A[] forall (i : id_t) forall (j : id_t) Context(i).Active &amp;&amp; Context(j).Active imply i == j</formula>
			<comment>There is at most one context Active</comment>
		</query>
		<query>
			<formula>A[] forall (i : id_t) forall (j : id_t) S_controller(i).Active &amp;&amp; S_controller(j).Active imply i == j</formula>
			<comment>There is never more than one context-controller active</comment>
		</query>
		<query>
			<formula>A[] not deadlock</formula>
			<comment>There are no deadlocks</comment>
		</query>
		<query>
			<formula>Context(0).Active --&gt; S_controller(0).Active</formula>
			<comment>If a context becomes active its controller will eventually become active</comment>
		</query>
	</queries>
</nta>
