{"version":3,"sources":["App.js","reportWebVitals.js","components/Cards/CardStats.js","components/Dropdowns/TableDropdownF.js","components/Pages/Header.js","components/Pages/index.js","index.js"],"names":["engine","Styletron","App","value","debug","debugAfterHydration","className","action","method","name","type","window","result","rootElement","document","getElementById","ReactDOM","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","CardStats","statSubtitle","statTitle","statArrow","statPercent","statPercentColor","statDescripiron","statIconName","statIconColor","defaultProps","TableDropdownF","firstAction","secondAction","thirdAction","React","useState","dropdownPopoverShow","setDropdownPopoverShow","btnDropdownRef","createRef","popoverDropdownRef","href","ref","onClick","e","preventDefault","createPopper","current","placement","Header","bg","h","xs","md","d","align","m","l","tag","textSize","textColor","Index","Main","StrictMode"],"mappings":"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","file":"js/main.8ddbf541.chunk.js","sourcesContent":["import './App.css';\r\nimport {\r\n  ThemeProvider,\r\n  DefaultTheme,\r\n  StyleReset,\r\n  Div,\r\n  Button,\r\n  Text,\r\n  Icon\r\n} from \"atomize\";\r\nimport ReactDOM from \"react-dom\";\r\nimport React from \"react\";\r\nimport { Provider as StyletronProvider, DebugEngine } from \"styletron-react\";\r\nimport { Client as Styletron } from \"styletron-engine-atomic\";\r\n\r\nconst debug =\r\n  process.env.NODE_ENV === \"production\" ? void 0 : new DebugEngine();\r\n\r\n// 1. Create a client engine instance\r\nconst engine = new Styletron();\r\n\r\nfunction App() {\r\n  return (\r\n      <StyletronProvider value={engine} debug={debug} debugAfterHydration>\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <form action=\"/example/\" method=\"post\">\r\n          <select name=\"exampleButtons\">\r\n            <option>0_modeling_goals</option>\r\n            <option>1_analysis_build_cgg</option>\r\n            <option>2_synthesis_realize_controllers</option>\r\n            <option>3_simulation_orchestrate</option>\r\n          </select>\r\n          <button name=\"submitExample\" type=\"submit\">Run Example</button>\r\n        </form>\r\n        <div>Example output : {window.result}</div>\r\n      </header>\r\n    </div>\r\n      </StyletronProvider>\r\n  );\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function CardStats({\r\n  statSubtitle,\r\n  statTitle,\r\n  statArrow,\r\n  statPercent,\r\n  statPercentColor,\r\n  statDescripiron,\r\n  statIconName,\r\n  statIconColor,\r\n}) {\r\n  return (\r\n    <>\r\n      <div className=\"relative flex flex-col min-w-0 break-words bg-white rounded mb-6 xl:mb-0 shadow-lg\">\r\n        <div className=\"flex-auto p-4\">\r\n          <div className=\"flex flex-wrap\">\r\n            <div className=\"relative w-full pr-4 max-w-full flex-grow flex-1\">\r\n              <h5 className=\"text-blueGray-400 uppercase font-bold text-xs\">\r\n                {statSubtitle}\r\n              </h5>\r\n              <span className=\"font-semibold text-xl text-blueGray-700\">\r\n                {statTitle}\r\n              </span>\r\n            </div>\r\n            <div className=\"relative w-auto pl-4 flex-initial\">\r\n              <div\r\n                className={\r\n                  \"text-white p-3 text-center inline-flex items-center justify-center w-12 h-12 shadow-lg rounded-full \" +\r\n                  statIconColor\r\n                }\r\n              >\r\n                <i className={statIconName}></i>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <p className=\"text-sm text-blueGray-400 mt-4\">\r\n            <span className={statPercentColor + \" mr-2\"}>\r\n              <i\r\n                className={\r\n                  statArrow === \"up\"\r\n                    ? \"fas fa-arrow-up\"\r\n                    : statArrow === \"down\"\r\n                    ? \"fas fa-arrow-down\"\r\n                    : \"\"\r\n                }\r\n              ></i>{\" \"}\r\n              {statPercent}%\r\n            </span>\r\n            <span className=\"whitespace-nowrap\">{statDescripiron}</span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nCardStats.defaultProps = {\r\n  statSubtitle: \"Traffic\",\r\n  statTitle: \"350,897\",\r\n  statArrow: \"up\",\r\n  statPercent: \"3.48\",\r\n  statPercentColor: \"text-emerald-500\",\r\n  statDescripiron: \"Since last month\",\r\n  statIconName: \"far fa-chart-bar\",\r\n  statIconColor: \"bg-red-500\",\r\n};\r\n\r\nCardStats.propTypes = {\r\n  statSubtitle: PropTypes.string,\r\n  statTitle: PropTypes.string,\r\n  statArrow: PropTypes.oneOf([\"up\", \"down\"]),\r\n  statPercent: PropTypes.string,\r\n  // can be any of the text color utilities\r\n  // from tailwindcss\r\n  statPercentColor: PropTypes.string,\r\n  statDescripiron: PropTypes.string,\r\n  statIconName: PropTypes.string,\r\n  // can be any of the background color utilities\r\n  // from tailwindcss\r\n  statIconColor: PropTypes.string,\r\n};\r\n","import React from \"react\";\r\nimport { createPopper } from \"@popperjs/core\";\r\n\r\nexport default function TableDropdownF({\r\n  firstAction,\r\n    secondAction,\r\n    thirdAction,\r\n}) {\r\n\r\n  // dropdown props\r\n  const [dropdownPopoverShow, setDropdownPopoverShow] = React.useState(false);\r\n  const btnDropdownRef = React.createRef();\r\n  const popoverDropdownRef = React.createRef();\r\n  const openDropdownPopover = () => {\r\n    createPopper(btnDropdownRef.current, popoverDropdownRef.current, {\r\n      placement: \"left-start\",\r\n    });\r\n    setDropdownPopoverShow(true);\r\n  };\r\n  const closeDropdownPopover = () => {\r\n    setDropdownPopoverShow(false);\r\n  };\r\n  return (\r\n    <>\r\n      <a\r\n        className=\"text-blueGray-500 py-1 px-3\"\r\n        href=\"#pablo\"\r\n        ref={btnDropdownRef}\r\n        onClick={(e) => {\r\n          e.preventDefault();\r\n          dropdownPopoverShow ? closeDropdownPopover() : openDropdownPopover();\r\n        }}\r\n      >\r\n        <i className=\"fas fa-ellipsis-v\"></i>\r\n      </a>\r\n      <div\r\n        ref={popoverDropdownRef}\r\n        className={\r\n          (dropdownPopoverShow ? \"block \" : \"hidden \") +\r\n          \"bg-white text-base z-50 float-left py-2 list-none text-left rounded shadow-lg min-w-48\"\r\n        }\r\n      >\r\n        <a\r\n          href=\"#pablo\"\r\n          className={\r\n            \"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\r\n          }\r\n          onClick={(e) => e.preventDefault()}\r\n        >\r\n            {firstAction}\r\n        </a>\r\n        <a\r\n          href=\"#pablo\"\r\n          className={\r\n            \"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\r\n          }\r\n          onClick={(e) => e.preventDefault()}\r\n        >\r\n            {secondAction}\r\n        </a>\r\n        <a\r\n          href=\"#pablo\"\r\n          className={\r\n            \"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\r\n          }\r\n          onClick={(e) => e.preventDefault()}\r\n        >\r\n            {thirdAction}\r\n        </a>\r\n      </div>\r\n    </>\r\n  );\r\n};","import React from 'react';\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"assets/styles/tailwind.css\";\r\nimport {\r\n  Div,\r\n  Text,\r\n} from \"atomize\";\r\n\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"../../assets/styles/tailwind.css\";\r\nimport { Provider as StyletronProvider, DebugEngine } from \"styletron-react\";\r\nimport { Client as Styletron } from \"styletron-engine-atomic\";\r\n\r\nconst debug =\r\n  process.env.NODE_ENV === \"production\" ? void 0 : new DebugEngine();\r\n\r\n// 1. Create a client engine instance\r\nconst engine = new Styletron();\r\n\r\n\r\n\r\n\r\nexport default function Header ({\r\n\r\n}) {\r\n    return (\r\n        <>\r\n            <StyletronProvider value={engine} debug={debug} debugAfterHydration>\r\n            <Div bg={\"#BCB3E2\"} h={{ xs: 'auto', md: '10vh' }} d={\"flex\"} align={\"center\"} >\r\n                <Div >logo</Div>\r\n                <Div m={{l:\"2%\"}}><Text tag={\"h2\"} textSize=\"display2\" textColor={\"gray800\"}>Crome</Text></Div>\r\n                <Div m={{l:\"35%\"}}><Text tag={\"h4\"} textSize=\"subheader\" textColor={\"white\"}>Other</Text></Div>\r\n                <Div m={{l:\"5%\"}}><Text tag={\"h4\"} textSize=\"subheader\" textColor={\"white\"}>CGG</Text></Div>\r\n                <Div m={{l:\"5%\"}}><Text tag={\"h4\"} textSize=\"subheader\" textColor={\"white\"}>About</Text></Div>\r\n            </Div>\r\n            </StyletronProvider>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"assets/styles/tailwind.css\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"../../assets/styles/tailwind.css\";\r\n\r\nexport default function Index ({\r\n\r\n}) {\r\n    return (\r\n        <>\r\n            <div>\r\n                <h1 className=\"text-6xl font-normal leading-normal mt-0 mb-2 text-indigo-800\">\r\n                Contract-Based Goals Graph\r\n                </h1>\r\n            </div>\r\n            <div className=\"container px-4 mx-auto\">\r\n                <div className=\"flex flex-wrap\">\r\n                    <div className=\"w-full px-4 flex-1 rounded border border-solid border-blueGray-100\">\r\n                      <span className=\"text-sm block my-4 p-3 text-blueGray-700\">Create your own CGG with customized goals, actions, locations...</span>\r\n                      <button className=\"text-indigo-500 bg-transparent border border-solid border-indigo-500 hover:bg-indigo-500 hover:text-white active:bg-indigo-600 font-bold uppercase text-sm px-6 py-3 rounded outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\" type=\"button\">\r\n                          <i className=\"fas fa-upload\"></i> Create CGG\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"w-full px-4 flex-1\">\r\n\r\n                    </div>\r\n                        <div className=\"w-full px-4 flex-1 rounded border border-solid border-blueGray-100\">\r\n                      <span className=\"text-sm block my-4 p-3 text-blueGray-700 \">Load an existing example of CGG</span>\r\n                      <button className=\"text-indigo-500 bg-transparent border border-solid border-indigo-500 hover:bg-indigo-500 hover:text-white active:bg-indigo-600 font-bold uppercase text-sm px-6 py-3 rounded outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\" type=\"button\">\r\n                          <i className=\"fas fa-plus-circle\"></i> Load CGG\r\n                      </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { StyleReset, Icon } from 'atomize';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"assets/styles/tailwind.css\";\r\n\r\n\r\nimport {\r\n  ThemeProvider,\r\n  DefaultTheme,\r\n  Div,\r\n  Button,\r\n  Text,\r\n} from \"atomize\";\r\nimport CardStats from \"./components/Cards/CardStats\";\r\n\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"assets/styles/tailwind.css\";\r\nimport { Provider as StyletronProvider, DebugEngine } from \"styletron-react\";\r\nimport { Client as Styletron } from \"styletron-engine-atomic\";\r\nimport TableDropdownF from \"./components/Dropdowns/TableDropdownF\";\r\nimport HeaderStats from \"./components/Headers/HeaderStats\";\r\nimport TabsF from \"./components/Tabs/TabsF\";\r\nimport Header from \"./components/Pages/Header\";\r\nimport Index from \"./components/Pages\";\r\n\r\n\r\n\r\nconst debug =\r\n  process.env.NODE_ENV === \"production\" ? void 0 : new DebugEngine();\r\n\r\n// 1. Create a client engine instance\r\nconst engine = new Styletron();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n        <StyletronProvider value={engine} debug={debug} debugAfterHydration>\r\n            <div className=\"container px-4 mx-auto flex flex-wrap items-center justify-between\">\r\n          <div>Dropdown to select action : </div>\r\n          <TableDropdownF firstAction={\"test1\"} secondAction={\"test2\"} thirdAction={\"test3\"}/>\r\n          <div>It seems we can't modify the content of the dropdown</div>\r\n      </div>\r\n        </StyletronProvider>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n            <Header/>\r\n            <Index />\r\n    </React.StrictMode>,\r\n    document.getElementById('index')\r\n);\r\n\r\n\r\nexport default function Main() {\r\n  return (\r\n    <>\r\n      <StyleReset />\r\n      <App />\r\n\r\n    </>\r\n  );\r\n}\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}