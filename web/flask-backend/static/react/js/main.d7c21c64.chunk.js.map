{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","components/Dropdowns/TableDropdown.js","index.js"],"names":["engine","Styletron","App","value","debug","debugAfterHydration","className","action","method","name","type","window","result","color","size","rootElement","document","getElementById","ReactDOM","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","NotificationDropdown","React","useState","dropdownPopoverShow","setDropdownPopoverShow","btnDropdownRef","createRef","popoverDropdownRef","href","ref","onClick","e","preventDefault","createPopper","current","placement","Main","StrictMode","TableDropdown"],"mappings":"4QAAe,I,2BCoBTA,EAAS,IAAIC,IAEnB,SAASC,IACP,OACI,cAAC,WAAD,CAAmBC,MAAOH,EAAQI,MAPE,UAOYC,qBAAmB,EAAnE,SACF,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,uBAAMC,OAAO,YAAYC,OAAO,OAAhC,UACE,yBAAQC,KAAK,iBAAb,UACE,sDACA,0DACA,qEACA,iEAEF,wBAAQA,KAAK,gBAAgBC,KAAK,SAAlC,4BAEF,oDAAuBC,OAAOC,UAC9B,cAAC,OAAD,CAAMH,KAAK,MAAMI,MAAM,QAAQC,KAAK,gBAO5C,IAAMC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,cAAC,EAAD,IAASJ,GAEVb,QCnCAkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,2BC8DCQ,G,YAlEc,WAE3B,MAAsDC,IAAMC,UAAS,GAArE,mBAAOC,EAAP,KAA4BC,EAA5B,KACMC,EAAiBJ,IAAMK,YACvBC,EAAqBN,IAAMK,YAUjC,OACE,qCACE,mBACE7B,UAAU,8BACV+B,KAAK,SACLC,IAAKJ,EACLK,QAAS,SAACC,GACRA,EAAEC,iBACFT,EAVNC,GAAuB,IANvBS,YAAaR,EAAeS,QAASP,EAAmBO,QAAS,CAC/DC,UAAW,eAEbX,GAAuB,KAOrB,SASE,mBAAG3B,UAAU,wBAEf,sBACEgC,IAAKF,EACL9B,WACG0B,EAAsB,SAAW,WAClC,yFAJJ,UAOE,mBACEK,KAAK,SACL/B,UACE,gGAEFiC,QAAS,SAACC,GAAD,OAAOA,EAAEC,kBALpB,oBASA,mBACEJ,KAAK,SACL/B,UACE,gGAEFiC,QAAS,SAACC,GAAD,OAAOA,EAAEC,kBALpB,4BASA,mBACEJ,KAAK,SACL/B,UACE,gGAEFiC,QAAS,SAACC,GAAD,OAAOA,EAAEC,kBALpB,yCCnCO,IAAIxC,IAcJ,SAAS4C,IACtB,OACE,qCACE,cAAC,aAAD,IACA,cAAC,EAAD,OAhBN3B,IAASC,OACP,eAAC,IAAM2B,WAAP,WACI,sBAAKxC,UAAU,qEAAf,UACI,+DACA,cAACyC,EAAD,IACA,0FAEN,cAAC,EAAD,OAEF/B,SAASC,eAAe,SAe1BG,M","file":"js/main.d7c21c64.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"media/logo.6ce24c58.svg\";","import logo from './logo.svg';\r\nimport './App.css';\r\nimport {\r\n  ThemeProvider,\r\n  DefaultTheme,\r\n  StyleReset,\r\n  Div,\r\n  Button,\r\n  Text,\r\n  Icon\r\n} from \"atomize\";\r\nimport ReactDOM from \"react-dom\";\r\nimport React from \"react\";\r\nimport { Provider as StyletronProvider, DebugEngine } from \"styletron-react\";\r\nimport { Client as Styletron } from \"styletron-engine-atomic\";\r\n\r\nconst debug =\r\n  process.env.NODE_ENV === \"production\" ? void 0 : new DebugEngine();\r\n\r\n// 1. Create a client engine instance\r\nconst engine = new Styletron();\r\n\r\nfunction App() {\r\n  return (\r\n      <StyletronProvider value={engine} debug={debug} debugAfterHydration>\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <form action=\"/example/\" method=\"post\">\r\n          <select name=\"exampleButtons\">\r\n            <option>0_modeling_goals</option>\r\n            <option>1_analysis_build_cgg</option>\r\n            <option>2_synthesis_realize_controllers</option>\r\n            <option>3_simulation_orchestrate</option>\r\n          </select>\r\n          <button name=\"submitExample\" type=\"submit\">Run Example</button>\r\n        </form>\r\n        <div>Example output : {window.result}</div>\r\n        <Icon name=\"Add\" color=\"black\" size=\"50px\" />\r\n      </header>\r\n    </div>\r\n      </StyletronProvider>\r\n  );\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\nimport { createPopper } from \"@popperjs/core\";\n\nconst NotificationDropdown = () => {\n  // dropdown props\n  const [dropdownPopoverShow, setDropdownPopoverShow] = React.useState(false);\n  const btnDropdownRef = React.createRef();\n  const popoverDropdownRef = React.createRef();\n  const openDropdownPopover = () => {\n    createPopper(btnDropdownRef.current, popoverDropdownRef.current, {\n      placement: \"left-start\",\n    });\n    setDropdownPopoverShow(true);\n  };\n  const closeDropdownPopover = () => {\n    setDropdownPopoverShow(false);\n  };\n  return (\n    <>\n      <a\n        className=\"text-blueGray-500 py-1 px-3\"\n        href=\"#pablo\"\n        ref={btnDropdownRef}\n        onClick={(e) => {\n          e.preventDefault();\n          dropdownPopoverShow ? closeDropdownPopover() : openDropdownPopover();\n        }}\n      >\n        <i className=\"fas fa-ellipsis-v\"></i>\n      </a>\n      <div\n        ref={popoverDropdownRef}\n        className={\n          (dropdownPopoverShow ? \"block \" : \"hidden \") +\n          \"bg-white text-base z-50 float-left py-2 list-none text-left rounded shadow-lg min-w-48\"\n        }\n      >\n        <a\n          href=\"#pablo\"\n          className={\n            \"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n          }\n          onClick={(e) => e.preventDefault()}\n        >\n          Action\n        </a>\n        <a\n          href=\"#pablo\"\n          className={\n            \"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n          }\n          onClick={(e) => e.preventDefault()}\n        >\n          Another action\n        </a>\n        <a\n          href=\"#pablo\"\n          className={\n            \"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n          }\n          onClick={(e) => e.preventDefault()}\n        >\n          Something else here\n        </a>\n      </div>\n    </>\n  );\n};\n\nexport default NotificationDropdown;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { StyleReset, Icon } from 'atomize';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport CardStats from \"./components/Cards/CardStats\";\r\nimport IndexDropdown from \"./components/Dropdowns/IndexDropdown\";\r\nimport NotificationDropdown from \"./components/Dropdowns/NotificationDropdown\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"assets/styles/tailwind.css\";\r\nimport { Provider as StyletronProvider, DebugEngine } from \"styletron-react\";\r\nimport { Client as Styletron } from \"styletron-engine-atomic\";\r\nimport PagesDropdown from \"./components/Dropdowns/PagesDropdown\";\r\nimport TableDropdown from \"./components/Dropdowns/TableDropdown\";\r\n\r\nconst debug =\r\n  process.env.NODE_ENV === \"production\" ? void 0 : new DebugEngine();\r\n\r\n// 1. Create a client engine instance\r\nconst engine = new Styletron();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <div className=\"container px-4 mx-auto flex flex-wrap items-center justify-between\">\r\n          <div>Dropdown to select action : </div>\r\n          <TableDropdown />\r\n          <div>It seems we can't modify the content of the dropdown</div>\r\n      </div>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nexport default function Main() {\r\n  return (\r\n    <>\r\n      <StyleReset />\r\n      <App />\r\n    </>\r\n  );\r\n}\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}