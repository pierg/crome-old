{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","components/Dropdowns/NotificationDropdown.js","index.js"],"names":["engine","Styletron","App","value","debug","debugAfterHydration","className","action","method","name","type","window","result","src","logo","alt","token","href","target","rel","color","size","rootElement","document","getElementById","ReactDOM","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","NotificationDropdown","React","useState","dropdownPopoverShow","setDropdownPopoverShow","btnDropdownRef","createRef","popoverDropdownRef","ref","onClick","e","preventDefault","console","log","createPopper","current","placement","Main","StrictMode"],"mappings":"yQAAe,MAA0B,0B,8BCoBnCA,EAAS,IAAIC,IAEnB,SAASC,IACP,OACI,cAAC,WAAD,CAAmBC,MAAOH,EAAQI,MAPE,UAOYC,qBAAmB,EAAnE,SACF,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,uBAAMC,OAAO,YAAYC,OAAO,OAAhC,UACE,yBAAQC,KAAK,iBAAb,UACE,sDACA,0DACA,qEACA,iEAEF,wBAAQA,KAAK,gBAAgBC,KAAK,SAAlC,4BAEF,oDAAuBC,OAAOC,UAC9B,qBAAKC,IAAKC,EAAMR,UAAU,WAAWS,IAAI,SACzC,sCACO,8CADP,0BAGA,4CAAeJ,OAAOK,SACtB,mBACEV,UAAU,WACVW,KAAK,uBACLC,OAAO,SACPC,IAAI,sBAJN,yBAQA,cAAC,OAAD,CAAMV,KAAK,MAAMW,MAAM,QAAQC,KAAK,gBAO5C,IAAMC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,cAAC,EAAD,IAASJ,GAEVpB,QChDAyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,2BCyECQ,EA7Ec,WAAM,MAEqBC,IAAMC,UAAS,GAFpC,mBAE1BC,EAF0B,KAELC,EAFK,KAG3BC,EAAiBJ,IAAMK,YACvBC,EAAqBN,IAAMK,YAWjC,OACE,qCACE,mBACEpC,UAAU,oCACVW,KAAK,SACL2B,IAAKH,EACLI,QAAS,SAACC,GACRA,EAAEC,iBACFR,EAVNC,GAAuB,IAPvBQ,QAAQC,IAAI,OACZC,YAAaT,EAAeU,QAASR,EAAmBQ,QAAS,CAC/DC,UAAW,iBAEbZ,GAAuB,KAOrB,SASE,mBAAGlC,UAAU,kBAEf,sBACEsC,IAAKD,EACLrC,WACGiC,EAAsB,SAAW,WAClC,8FAJJ,UAOE,mBACEtB,KAAK,SACLX,UACE,gGAEFuC,QAAS,SAACC,GAAD,OAAOA,EAAEC,kBALpB,oBASA,mBACE9B,KAAK,SACLX,UACE,gGAEFuC,QAAS,SAACC,GAAD,OAAOA,EAAEC,kBALpB,4BASA,mBACE9B,KAAK,SACLX,UACE,gGAEFuC,QAAS,SAACC,GAAD,OAAOA,EAAEC,kBALpB,iCASA,qBAAKzC,UAAU,qDACf,mBACEW,KAAK,SACLX,UACE,gGAEFuC,QAAS,SAACC,GAAD,OAAOA,EAAEC,kBALpB,kCCzCF/C,G,YAAS,IAAIC,KAcJ,SAASoD,IACtB,OACE,qCACE,cAAC,aAAD,IACA,cAAC,EAAD,OAhBN5B,IAASC,OACP,eAAC,IAAM4B,WAAP,WACE,cAAC,EAAD,IACA,cAAC,EAAD,IACE,cAAC,WAAD,CAAmBnD,MAAOH,EAAQI,MATE,UASYC,qBAAmB,EAAnE,SACA,cAAC,OAAD,CAAMI,KAAK,MAAMY,KAAK,cAG1BE,SAASC,eAAe,SAiB1BG,M","file":"js/main.36cfc5b0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"media/logo.6ce24c58.svg\";","import logo from './logo.svg';\r\nimport './App.css';\r\nimport {\r\n  ThemeProvider,\r\n  DefaultTheme,\r\n  StyleReset,\r\n  Div,\r\n  Button,\r\n  Text,\r\n  Icon\r\n} from \"atomize\";\r\nimport ReactDOM from \"react-dom\";\r\nimport React from \"react\";\r\nimport { Provider as StyletronProvider, DebugEngine } from \"styletron-react\";\r\nimport { Client as Styletron } from \"styletron-engine-atomic\";\r\n\r\nconst debug =\r\n  process.env.NODE_ENV === \"production\" ? void 0 : new DebugEngine();\r\n\r\n// 1. Create a client engine instance\r\nconst engine = new Styletron();\r\n\r\nfunction App() {\r\n  return (\r\n      <StyletronProvider value={engine} debug={debug} debugAfterHydration>\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <form action=\"/example/\" method=\"post\">\r\n          <select name=\"exampleButtons\">\r\n            <option>0_modeling_goals</option>\r\n            <option>1_analysis_build_cgg</option>\r\n            <option>2_synthesis_realize_controllers</option>\r\n            <option>3_simulation_orchestrate</option>\r\n          </select>\r\n          <button name=\"submitExample\" type=\"submit\">Run Example</button>\r\n        </form>\r\n        <div>Example output : {window.result}</div>\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.js</code> and save to reload.\r\n        </p>\r\n        <p>My Token = {window.token}</p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org/\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n        <Icon name=\"Add\" color=\"black\" size=\"50px\" />\r\n      </header>\r\n    </div>\r\n      </StyletronProvider>\r\n  );\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport { createPopper } from \"@popperjs/core\";\r\n\r\nconst NotificationDropdown = () => {\r\n  // dropdown props\r\n  const [dropdownPopoverShow, setDropdownPopoverShow] = React.useState(false);\r\n  const btnDropdownRef = React.createRef();\r\n  const popoverDropdownRef = React.createRef();\r\n  const openDropdownPopover = () => {\r\n    console.log(\"hey\");\r\n    createPopper(btnDropdownRef.current, popoverDropdownRef.current, {\r\n      placement: \"bottom-start\",\r\n    });\r\n    setDropdownPopoverShow(true);\r\n  };\r\n  const closeDropdownPopover = () => {\r\n    setDropdownPopoverShow(false);\r\n  };\r\n  return (\r\n    <>\r\n      <a\r\n        className=\"text-blueGray-500 block py-1 px-3\"\r\n        href=\"#pablo\"\r\n        ref={btnDropdownRef}\r\n        onClick={(e) => {\r\n          e.preventDefault();\r\n          dropdownPopoverShow ? closeDropdownPopover() : openDropdownPopover();\r\n        }}\r\n      >\r\n        <i className=\"fas fa-bell\"></i>\r\n      </a>\r\n      <div\r\n        ref={popoverDropdownRef}\r\n        className={\r\n          (dropdownPopoverShow ? \"block \" : \"hidden \") +\r\n          \"bg-white text-base z-50 float-left py-2 list-none text-left rounded shadow-lg mt-1 min-w-48\"\r\n        }\r\n      >\r\n        <a\r\n          href=\"#pablo\"\r\n          className={\r\n            \"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\r\n          }\r\n          onClick={(e) => e.preventDefault()}\r\n        >\r\n          Action\r\n        </a>\r\n        <a\r\n          href=\"#pablo\"\r\n          className={\r\n            \"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\r\n          }\r\n          onClick={(e) => e.preventDefault()}\r\n        >\r\n          Another action\r\n        </a>\r\n        <a\r\n          href=\"#pablo\"\r\n          className={\r\n            \"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\r\n          }\r\n          onClick={(e) => e.preventDefault()}\r\n        >\r\n          Something else here\r\n        </a>\r\n        <div className=\"h-0 my-2 border border-solid border-blueGray-100\" />\r\n        <a\r\n          href=\"#pablo\"\r\n          className={\r\n            \"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\r\n          }\r\n          onClick={(e) => e.preventDefault()}\r\n        >\r\n          Seprated link\r\n        </a>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NotificationDropdown;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { StyleReset, Icon } from 'atomize';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {\r\n  ThemeProvider,\r\n  DefaultTheme,\r\n  Div,\r\n  Button,\r\n  Text,\r\n} from \"atomize\";\r\nimport CardStats from \"./components/Cards/CardStats\";\r\nimport IndexDropdown from \"./components/Dropdowns/IndexDropdown\";\r\nimport NotificationDropdown from \"./components/Dropdowns/NotificationDropdown\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"assets/styles/tailwind.css\";\r\nimport { Provider as StyletronProvider, DebugEngine } from \"styletron-react\";\r\nimport { Client as Styletron } from \"styletron-engine-atomic\";\r\n\r\nconst debug =\r\n  process.env.NODE_ENV === \"production\" ? void 0 : new DebugEngine();\r\n\r\n// 1. Create a client engine instance\r\nconst engine = new Styletron();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n    <NotificationDropdown />\r\n      <StyletronProvider value={engine} debug={debug} debugAfterHydration>\r\n      <Icon name=\"Add\" size=\"20px\"/>\r\n      </StyletronProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\nexport default function Main() {\r\n  return (\r\n    <>\r\n      <StyleReset />\r\n      <App />\r\n\r\n    </>\r\n  );\r\n}\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}